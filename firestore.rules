rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // User profiles collection
    match /users/{userId} {
      // Allow read if user is authenticated
      allow read: if isSignedIn() && isOwner(userId);
      
      // Allow create/update if user is the owner and required fields are present
      allow create: if isSignedIn() && 
        isOwner(userId) &&
        request.resource.data['user-profile'] is map &&
        request.resource.data['user-profile'].email is string &&
        request.resource.data['user-profile'].email == request.auth.token.email;
      
      // Allow updates if user is the owner
      allow update: if isSignedIn() && isOwner(userId);
      
      // Subcollections
      match /{document=**} {
        // Inherit parent permissions
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }

    // Public read access for products
    match /products/{productId} {
      allow read: if true;  // Public read access
      allow create, update, delete: if false;  // Disable write by default
    }

    // User's cart
    match /carts/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
    }

    // User's orders
    match /orders/{orderId} {
      allow read: if isSignedIn() && isOwner(request.resource.data.userId);
      allow create: if isSignedIn() && 
        isOwner(request.resource.data.userId) &&
        request.resource.data.items is list &&
        request.resource.data.total is number;
    }

    // User's wishlist - updated to match the collection name used in the code
    match /user-wishlist/{userId} {
      allow read, write: if isSignedIn() && isOwner(userId);
      
      // Allow access to subcollections
      match /{document=**} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }
    }

    // User's addresses
    match /addresses/{userId} {
      allow read: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn() && 
        isOwner(userId) &&
        request.resource.data.address is string;
    }

    // Deny all other access by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
